Transferring a repository - GitHub DocsSkip to main contentGitHub DocsVersion: Free, Pro, & TeamSearch GitHub DocsAll productsRepositoriesCreate & manage repositoriesAbout repositoriesBest practicesCreating a new repositoryCreate from a templateCreate a template repoIssues-only repositoryDuplicating a repositoryCloning a repositoryTroubleshooting cloning errorsRenaming a repositoryTransferring a repositoryDeleting a repositoryRestore deleted repositoryManage repository settingsCustomize your repositoryAbout READMEsLicensing a repositoryDisplay a sponsor buttonSocial media previewClassify with topicsAbout code ownersRepository languagesAbout CITATION filesEnable featuresDisabling issuesDisable classic projectsManage GitHub Actions settingsDiscussionsSecurity & analysisManage repository settingsRepository visibilityTeams & peopleManage the forking policyManage pull request reviewsManage the commit signoff policyManage the push policyManaging Git LFS objects in archivesEmail notifications for pushesConfigure autolinksTag protection rulesBranches and mergesManage branchesView branchesRenaming a branchChange the default branchDelete & restore branchesConfigure PR mergesAbout merge methodsConfigure commit mergingConfigure commit squashingConfigure commit rebasingManaging merge queueManage branch updatesManage auto mergeAutomatic branch deletionMergeability of PRsAbout protected branchesBranch protection ruleRequired status checksWork with filesManaging filesCreating new filesAdd a fileMove a fileEdit filesRenaming a fileDelete filesHow changed files appearNew code view (beta)Using filesNavigating code on GitHubView files and track file changesPermanent links to filesWorking with non-code filesManaging large filesLarge filesGit Large File StorageInstall Git LFSConfigure Git LFSStorage & bandwidthCollaborationMove a file to Git LFSRemove filesResolve upload failuresRelease projectsAbout releasesManage releasesView releases & tagsSearching releasesLinking to releasesComparing releasesAutomated release notesAutomate release formsView activity and dataView deployment activityAbout repository graphsView repository activityView repository trafficView project contributorsAnalyze changesConnections between repositoriesArchive a repositoryArchiving repositoriesArchive content & dataReference & cite contentBacking up a repositoryRepositories/Create & manage repositories/Transferring a repositoryTransferring a repositoryIn this articleAbout repository transfersTransferring a repository owned by your personal accountTransferring a repository owned by your organizationYou can transfer repositories to other users or organization accounts.About repository transfers
When you transfer a repository to a new owner, they can immediately administer the repository's contents, issues, pull requests, releases, projects (classic), and settings. You can also change the repository name while transferring a repository. For more information, see "Renaming a repository."
Prerequisites for repository transfers:

When you transfer a repository that you own to another personal account, the new owner will receive a confirmation email. The confirmation email includes instructions for accepting the transfer. If the new owner doesn't accept the transfer within one day, the invitation will expire.
To transfer a repository that you own to an organization, you must have permission to create a repository in the target organization.
The target account must not have a repository with the same name, or a fork in the same network.
The original owner of the repository is added as a collaborator on the transferred repository. Other collaborators to the transferred repository remain intact.
Private forks can't be transferred.

If you transfer a private repository to a GitHub Free user or organization account, the repository will lose access to features like protected branches and GitHub Pages. For more information, see "GitHub's products."
What's transferred with a repository?
When you transfer a repository, its issues, pull requests, wiki, stars, and watchers are also transferred. If the transferred repository contains webhooks, services, secrets, or deploy keys, they will remain associated after the transfer is complete. Git information about commits, including contributions, is preserved. In addition:


If the transferred repository is a fork, then it remains associated with the upstream repository.


If the transferred repository has any forks, then those forks will remain associated with the repository after the transfer is complete.


If the transferred repository uses Git Large File Storage, all Git LFS objects are automatically moved. This transfer occurs in the background, so if you have a large number of Git LFS objects or if the Git LFS objects themselves are large, it may take some time for the transfer to occur. Before you transfer a repository that uses Git LFS, make sure the receiving account has enough data packs to store the Git LFS objects you'll be moving over. For more information on adding storage for personal accounts, see "Upgrading Git Large File Storage."


When a repository is transferred between two personal accounts, issue assignments are left intact. When you transfer a repository from a personal account to an organization, issues assigned to members in the organization remain intact, and all other issue assignees are cleared. Only owners in the organization are allowed to create new issue assignments. When you transfer a repository from an organization to a personal account, only issues assigned to the repository's owner are kept, and all other issue assignees are removed.


If the transferred repository contains a GitHub Pages site, then links to the Git repository on the Web and through Git activity are redirected. However, we don't redirect GitHub Pages associated with the repository.


All links to the previous repository location are automatically redirected to the new location. When you use git clone, git fetch, or git push on a transferred repository, these commands will redirect to the new repository location or URL. However, to avoid confusion, we strongly recommend updating any existing local clones to point to the new repository URL. You can do this by using git remote on the command line:
$ git remote set-url origin NEW_URL

Warning: If you create a new repository under your account in the future, do not reuse the original name of the transferred repository. If you do, redirects to the transferred repository will no longer work.



When you transfer a repository from an organization to a personal account, the repository's read-only collaborators will not be transferred. This is because collaborators can't have read-only access to repositories owned by a personal account. For more information about repository permission levels, see "Permission levels for a personal account repository" and "Repository roles for an organization."


Sponsors who have access to the repository through a sponsorship tier may be affected. For more information, see "Adding a repository to a sponsorship tier".


Packages associated with the repository may be transferred, or may lose their link to the repository, depending on the registry they belong to. For more information, see "About permissions for GitHub Packages."


For more information, see "Managing remote repositories."
Repository transfers and organizations
To transfer repositories to an organization, you must have repository creation permissions in the receiving organization. If organization owners have disabled repository creation by organization members, only organization owners can transfer repositories out of or into the organization.
Once a repository is transferred to an organization, the organization's default repository permission settings and default membership privileges will apply to the transferred repository.
Transferring a repository owned by your personal account
You can transfer your repository to any personal account that accepts your repository transfer. When a repository is transferred between two personal accounts, the original repository owner and collaborators are automatically added as collaborators to the new repository.
If you published a GitHub Pages site in a private repository and added a custom domain, before transferring the repository, you may want to remove or update your DNS records to avoid the risk of a domain takeover. For more information, see "Managing a custom domain for your GitHub Pages site."


On GitHub.com, navigate to the main page of the repository.


Under your repository name, click 
Settings.



At the bottom of the page, in the "Danger Zone" section, click Transfer.



Read the information about transferring a repository, then, following "New owner", select one of the options.


To choose one of your organizations, select Select one of my organizations, then use the dropdown menu to specify an organization.


Optionally, to rename the repository, enter a new name in the Repository name field.

Note: You must be an admin on the target organization to rename the repository.






To specify an organization or username, select Specify an organization or username, then enter the organization name or the new owner's username.





Read the warnings about potential loss of features depending on the new owner's GitHub subscription.



Following Type REPOSITORY NAME to confirm., type the name of the repository you'd like to transfer, then click I understand, transfer this repository.



Transferring a repository owned by your organization
If you have owner permissions in an organization or admin permissions to one of its repositories, you can transfer a repository owned by your organization to your personal account or to another organization.


Sign into your personal account that has admin or owner permissions in the organization that owns the repository.


On GitHub.com, navigate to the main page of the repository.


Under your repository name, click 
Settings.



At the bottom of the page, in the "Danger Zone" section, click Transfer.



Read the information about transferring a repository, then, following "New owner", select one of the options.


To choose one of your organizations, select Select one of my organizations, then use the dropdown menu to specify an organization.


Optionally, to rename the repository, enter a new name in the Repository name field.

Note: You must be an admin on the target organization to rename the repository.






To specify an organization or username, select Specify an organization or username, then enter the organization name or the new owner's username.





Read the warnings about potential loss of features depending on the new owner's GitHub subscription.



Following Type REPOSITORY NAME to confirm., type the name of the repository you'd like to transfer, then click I understand, transfer this repository.


Did this doc help you?Privacy policyHelp us make these docs great!All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request.Make a contributionOr, learn how to contribute.Still need help?Ask the GitHub communityContact support© 2023 GitHub, Inc.TermsPrivacySecurityStatusHelpContact GitHubPricingDeveloper APITrainingBlogAbout